# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The board model"""
type Board {
  columns: [Column!]
  id: ID!

  """The name of the board"""
  name: String!
}

"""The column model"""
type Column {
  id: ID!

  """The name of the column"""
  name: String!
  tasks: [Task!]
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input LoginData {
  email: String!
  password: String!
}

type LoginResponse {
  access_token: String!
  status: String!
}

type Mutation {
  createUser(input: SignupData!): UserResponse!
  login(input: LoginData!): LoginResponse!
}

type Query {
  board(id: ID!): Board
  boards: [Board!]!
  column(id: ID!): Column
  columns: [Column!]!
  getUser: UserResponse!
  logout: Boolean!
  refresh: LoginResponse!
  subtasks: [Subtask!]!
  tasks: [Task!]!
}

input SignupData {
  countersign: String!
  email: String!
  name: String!
  password: String!
  photo: String!
}

"""The sub-task model"""
type Subtask {
  id: ID!
  isCompleted: Boolean!

  """The title of the subtask"""
  title: String!
}

"""The task model"""
type Task {
  """The description of the task"""
  description: String
  id: ID!

  """
  The status of a task. can be (todo, doing and done) or (now, next and later)
  """
  status: String
  subtasks: [Subtask!]

  """The title of the task"""
  title: String!
}

type UserData {
  _id: String!
  createdAt: DateTime!
  email: String!
  id: String
  name: String!
  photo: String!
  role: String!
  updatedAt: DateTime!
}

type UserResponse {
  status: String!
  user: UserData!
}
