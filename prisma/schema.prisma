// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique

  createdAt DateTime @default(now())
  Board     Board[]
}

model Board {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Column    Column[]
  Task      Task[]

  User   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Column {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Task      Task[]

  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId String @db.ObjectId

  @@unique([name, boardId])
}

model Task {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  currentStatus String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  SubTask       SubTask[]

  status Column @relation(fields: [currentStatus, boardId], references: [name, boardId], onDelete: Cascade)

  boardId String @db.ObjectId
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  @@unique([title, boardId])
}

model SubTask {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId String @db.ObjectId

  @@unique([title, taskId])
}
